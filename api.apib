FORMAT: 1A
HOST: http://localhost:3000

# Todo App

# Group Users
## Get users [GET /users{?first}{?offset}{?term}]
+ Response 200 (application/json)
  + Attributes (array[User])

## Create a user [POST /users]
+ Body
  `{ firstName: "john", email: "john.doe@gmail.com", password: "ppppp" }`
+ Response 200 (application/json)
  + Attributes (User)

## Manage a user [/users/{userEmail}]
### Get a user [GET]
+ Response 200 (application/json)
  + Attributes (User)
+ Response 404 (application/json)

### Update a user [PATCH]
+ Body
  `{ firstName: "john", lastName: "doe" }`
+ Response 200 (application/json)
  + Attributes (User)
+ Response 404 (application/json)

### Delete a user [DELETE]
+ Response 200 (application/json)
  + Attributes (User)
+ Response 404 (application/json)

# Group Lists
## Get lists [GET /lists{?first}{?offset}{?term}]
+ Response 200 (application/json)
  + Attributes (array[List])

## Create a list [POST /lists]
+ Body
  `{ name: "A great name", description: "A great description" }`
+ Response 200 (application/json)
  + Attributes (List)

## Manage a list [/lists/{listId}]
### Get a list [GET]
+ Response 200 (application/json)
  + Attributes (List)
+ Response 404 (application/json)

### Update a list [PATCH]
+ Body
  `{ name: "A great name", description: "A great description" }`
+ Response 200 (application/json)
  + Attributes (List)
+ Response 404 (application/json)

# Group Tasks
## Get tasks [GET /lists/{listId}/tasks{?first}{?offset}{?term}]
+ Response 200 (application/json)
  + Attributes (array[Task])

## Create a list [POST /lists/{listId}/tasks]
+ Body
  `{ name: "A great task name", completed: false }`
+ Response 200 (application/json)
  + Attributes (Task)

## Single Taks management [/lists/{listId}/tasks/{taskId}]
### Get a task [GET]
+ Response 200 (application/json)
  + Attributes (Task)
+ Response 404 (application/json)

### Update a task [PATCH]
+ Body
  `{ name: "A great task name", completed: false }`
+ Response 200 (application/json)
  + Attributes (Task)
+ Response 404 (application/json)

### Delete a task [DELETE]
+ Response 200 (application/json)
  + Attributes (Task)
+ Response 404 (application/json)

# Data Structures

## List (object)
+ _id (string)
+ name (string, required)
+ description (string)

## Task (object)
+ _id (string)
+ listId (string, required)
+ name (string, required)
+ description (string)
+ completed: false (boolean)

## User (object)
+ firstName (string)
+ lastName (string)
+ email (string, required)
+ password (string, required)
